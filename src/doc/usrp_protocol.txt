USRP protocol used to send via UDP analog audio (2021.05.09)

The USRP was implemented in Allstar (in 2010, KA1RBI) and used by various hamradio applications like
MMDVMHost, USRP2M17, Analog_Bridge, Analog_Reflector etc

UDP USRP FRAME:
==============
USRP_HEADER (32 bytes) + DATA 


Typical sequence for send audio:

USRP_HEADER (Type_Frame=2, PTT=0) + DATA (The first byte is set 0x08 (TLV TAG see below) and contain MetaDATA (see below))
USRP_HEADER (Type_Frame=0, PTT=1) + DATA (Audio)
....
USRP_HEADER (Type_Frame=0, PTT=0)


The first frame type = 2 (USRP_TYPE_TEXT) with MetaData is not obligatory and can be omitted, but it can be useful when,
for example, we want to send information about the callsign source from the analogue to
for example M17 or callsign and its DMR ID to DMR.

At current in USRP header are used only the following information:
   USRP string in 0-3 bytes
   Sequence number (4-7 bytes)
   PTT status  (15 byte) 1 = ON , 0 = OFF
   Type of Frame (20 byte) 0 Audio data, 2 MetaData

The rest of the information in USRP header should be set to 0

USRP Header:
==============================
Bytes  Value            Notes
0-3    USRP             string char: USRP
4-7    Sequence number  
8-11   Memory?          Set to 0
12-15  PTT              PTT value is stored in 15 byte. 1 for PTT ON start transmission, 0 for PTT OFF stop transmission
16-19  Talkgroup?       Set to 0
20-23  Type_Frame       Type frame is stored in 20 byte. 0 for Audio (USRP_TYPE_VOICE), 2 for MetaData (USRP_TYPE_TEXT) 
24-27  Mpxid?           Set to 0
28-31  Reserved?        Set to 0

The next part from 32 Bytes is contained AUDIO data or MetaData.

Audio signed 16-bit little-endian PCM audio at 8000 samples/sec, 160 samples per packet 

USRP_VOICE_FRAME_SIZE (160*sizeof(short))  // 0.02 * 8k


Dump with USRP Audio data PTT ON = 1

0x0000:  4500 017c 524b 4000 4011 e923 7f00 0001  E..|RK@.@..#....
0x0010:  7f00 0001 d432 d431 0168 ff7b 5553 5250  .....2.1.h.{USRP
0x0020:  0000 000b 0000 0000 0000 0001 0000 0000  ................
0x0030:  0000 0000 0000 0000 0000 0000 eaff efff  ................
0x0040:  d5ff c3ff c4ff c6ff c9ff caff e1ff eeff  ................


The last USRP frame PTT OFF = 0

0x0000:  4500 017c 9b6d 4000 4011 a001 7f00 0001  E..|.m@.@.......
0x0010:  7f00 0001 d432 d431 0168 ff7b 5553 5250  .....2.1.h.{USRP
0x0020:  0000 0050 0000 0000 0000 0000 0000 0000  ...P............
0x0030:  0000 0000 0000 0000 0000 0000 0000 0000  ................
0x0040:  0000 0000 0000 0000 0000 0000 0000 0000  ................


The PTT status in the USRP of the header can be used to control PTT or 
SQL, or information about start and end transmission in an application that is receiving data via USRP.


The DATA type USRP_TYPE_TEXT
=============================

If the first byte of USRP_TYPE_TEXT start with 0x08 (see below TLV Tags number) contain MetaDATA like
DMIR ID, Repeater ID, Talk Group, Tiem Slot, Color Code, Callsign

MetaData for TLV_Tag 8 is follwoing:

0x08,TLVLenght,dmrID, repeaterID, tg, ts, cc, callsign, 0

TLVLength = 3 + 4 + 3 + 1 + 1 + len(callsign) + 1


USRP_TYPE_TEXT with TLV_TAG 8 from Analog Bridge version 1.6.1 and USRP2M17
=================================================================================        
TLV Tags         Set 0x08 (see TLV_TAGS)
TLV Length       Value of lenght of MetaData where TLVLenght = 3 + 4 + 3 + 1 + 1 + len(call) + 1 
DMR Id           Lenght 3 bytes. Set 0 or ((dmr_id >> 16) & 0xff),((dmr_id >> 8) & 0xff),(dmr_id & 0xff)
RPT Id           Lenght 4 bytes. Set 0 or ((rpt_id >> 32) & 0xff),((rpt_id >> 16) & 0xff),((rpt_id >> 8) & 0xff),(rpt_id & 0xff)
TalkGroup        Lenght 3 bytes. Set 0 or ((tg >> 16) & 0xff),((tg >> 8) & 0xff),(tg & 0xff)
TimeSlot#        Length 1 byte. Set 0 or Time Slot number 
ColorCode        Length 1 byte. Set 0 or value of ColorCode 
Callsing         Put the callisgn 
End of MetData   Set 0

Minimum information in Metadata is Callsign for example when we exchanged USRP data between
Analog and M17. For DMR it will be useful to add DMR ID for callsign

Example dump of MetaData from Analog Bridge v1.6.2 Type of frmae USRP_TYPE_TXT (2) with TLV TAG = 8 
and TVL Length = 0x13 for callsign N0CALL


0x0000:  0000 0000 0000 0000 0000 0000 0800 4500  ..............E.
0x0010:  017c cbb9 4000 4011 6fb5 7f00 0001 7f00  .|..@.@.o.......
0x0020:  0001 8613 8614 0168 ff7b 5553 5250 0000  .......h.{USRP..
0x0030:  00da 0000 0000 0000 0000 0000 0000 0200  ................
0x0040:  0000 0000 0000 0000 0000 0813 12d6 8700  ...............
0x0050:  0000 0000 0000 0000 4e30 4341 4c4c 0000  ........N0CALL..
0x0060:  0000 0000 0000 0000 0000 0000 0000 0000  ................


Below example dump from Analog Reflector USRP_TYPE_TXT with TLV TAG = 8
Analog Reflector use longer TLV (0x15) compare to Analog Bridge (0x13) for 
example for the same length callsign N0CALL  
but I did not find information as to what the extra 2 bytes are used in AR 

0x0000:  0000 0000 0000 0000 0000 0000 0800 4500  ..............E.
0x0010:  017c 5f49 4000 4011 dc25 7f00 0001 7f00  .|_I@.@..%......
0x0020:  0001 d432 d431 0168 ff7b 5553 5250 0000  ...2.1.h.{USRP..
0x0030:  0000 0000 0000 0000 0000 0000 0000 0200  ................
0x0040:  0000 0000 0000 0000 0000 0815 12d6 8700  ............'.Z.
0x0050:  0000 0000 0000 0000 4e30 4341 4c4c 0000  ........N0CALL..
0x0060:  0000 0000 0000 0000 0000 0000 0000 0000  ................


Remarks: The Analog Bridge v1.6.2 set in field CALLSIGN information like: {"call":"N3ABC","name":"Club station"}
if is connected with Analog Refelctor



Examples send remote command to Analog Bridge tune Talk Group 
Type frame in USRP header is used 1 USRP_TYPE_DTMF (byte 20)
In 33 byte is value 3 TLV_TAG_TG_TUNE and next bytes contain 
a number of tuned Talk Group

Tune Talk Group 4000

    0x0000:  4500 017c 9f5b 4000 4011 9c13 7f00 0001  E..|.[@.@.......
    0x0010:  7f00 0001 d432 d431 0168 ff7b 5553 5250  .....2.1.h.{USRP
    0x0020:  0000 0002 0000 0000 0000 0000 0000 0000  ................
    0x0030:  0100 0000 0000 0000 0000 0000 3430 3030  ............4000
    0x0040:  0000 0000 0000 0000 0000 0000 0000 0000  ................

Tune Tlak Group 7

    0x0000:  4500 017c d985 4000 4011 61e9 7f00 0001  E..|..@.@.a.....
    0x0010:  7f00 0001 d432 d431 0168 ff7b 5553 5250  .....2.1.h.{USRP
    0x0020:  0000 0003 0000 0000 0000 0000 0000 0000  ................
    0x0030:  0100 0000 0000 0000 0000 0000 3700 0000  ............7...
    0x0040:  0000 0000 0000 0000 0000 0000 0000 0000  ................

Tune Talk Group 17

    0x0000:  4500 017c e7f3 4000 4011 537b 7f00 0001  E..|..@.@.S{....
    0x0010:  7f00 0001 d432 d431 0168 ff7b 5553 5250  .....2.1.h.{USRP
    0x0020:  0000 0004 0000 0000 0000 0000 0000 0000  ................
    0x0030:  0100 0000 0000 0000 0000 0000 3137 0000  ............17..
    0x0040:  0000 0000 0000 0000 0000 0000 0000 0000  ................

Tune Talk Group 10650

    0x0000:  4500 017c 6f66 4000 4011 cc08 7f00 0001  E..|of@.@.......
    0x0010:  7f00 0001 d432 d431 0168 ff7b 5553 5250  .....2.1.h.{USRP
    0x0020:  0000 0007 0000 0000 0000 0000 0000 0000  ................
    0x0030:  0100 0000 0000 0000 0000 0000 3130 3236  ............1026
    0x0040:  3000 0000 0000 0000 0000 0000 0000 0000  0...............
    0x0050:  0000 0000 0000 0000 0000 0000 0000 0000  ................


Other information

TYPE of USRP frames
#######################
USRP_TYPE_VOICE = 0  (Audio data)
USRP_TYPE_DTMF = 1
USRP_TYPE_TEXT = 2   (Meta data)
USRP_TYPE_PING = 3
USRP_TYPE_TLV = 4
USRP_TYPE_VOICE_ADPCM = 5
USRP_TYPE_VOICE_ULAW = 6


TLV tags
#######################
TLV_TAG_BEGIN_TX    = 0
TLV_TAG_AMBE        = 1
TLV_TAG_END_TX      = 2
TLV_TAG_TG_TUNE     = 3
TLV_TAG_PLAY_AMBE   = 4
TLV_TAG_REMOTE_CMD  = 5
TLV_TAG_AMBE_49     = 6
TLV_TAG_AMBE_72     = 7
TLV_TAG_SET_INFO    = 8
TLV_TAG_IMBE        = 9
TLV_TAG_DSAMBE      = 10
TLV_TAG_FILE_XFER   = 11


Information base on:

https://github.com/AllStarLink/ASL-Asterisk/blob/develop/asterisk/channels/chan_usrp.h
https://github.com/AllStarLink/ASL-Asterisk/blob/develop/asterisk/channels/chan_usrp.c
https://github.com/DVSwitch/MMDVM_Bridge/blob/master/dvswitch.sh
https://github.com/DVSwitch/USRP_Client/blob/master/pyUC.py




